.practiceContainer {
  background: #fff;
  border: 4px solid #224;
  border-radius: 4px;
  display: flex;
  flex-direction: row;
  height: 583px;
  margin: 20px 20px 24px;
}

.practiceContainerChild {
  margin: 0 auto 8px;
  min-width: 486px;
}

.practiceContainerChild > .monospaced {
  height: 394px;
  letter-spacing: -1.55px;
  margin: 10px 0;
  overflow: hidden;
  white-space: nowrap;
}

.ligature {
  letter-spacing: normal;
}

.treeGraph {
  flex-basis: 100%;
  margin: 0 0px 8px 0;
  max-width: 448px;
  position: relative;
}

.treeGraph > div {
  bottom: 0px;
  display: flex;
  flex-wrap: wrap;
  justify-content: space-evenly;
  position: absolute;
  width: 100%;
}

.practiceContainer > div > .pseudocodeLabel,
.practiceContainer > div > .evaluatedNodesLabel,
.practiceContainer > div > .decisionLabel {
  margin: 10px 0;
}

.game,
.gameComplete,
.gameReset {
  float: left;
  margin: 0 20px 20px;
  width: 377.2px;
}

.game {
  cursor: pointer;
}

.lineX {
  animation-duration: 0.25s;
  animation-fill-mode: forwards;
  animation-name: draw;
  animation-timing-function: linear;
  stroke-dasharray: 50%;
  stroke-dashoffset: 50%;
}

.pathO {
  animation-duration: 0.5s;
  animation-fill-mode: forwards;
  animation-name: draw;
  animation-timing-function: linear;
  stroke-dasharray: 100%;
  stroke-dashoffset: 100%;
}

@keyframes draw {
  to {
    stroke-dashoffset: 0;
  }
}

.circle0 {
  animation-duration: 0.125s;
  animation-fill-mode: forwards;
  animation-name: fall0;
  animation-timing-function: linear;
}

.circle1 {
  animation-duration: 0.25s;
  animation-fill-mode: forwards;
  animation-name: fall1;
  animation-timing-function: linear;
}

.circle2 {
  animation-duration: 0.375s;
  animation-fill-mode: forwards;
  animation-name: fall2;
  animation-timing-function: linear;
}

.circle3 {
  animation-duration: 0.5s;
  animation-fill-mode: forwards;
  animation-name: fall3;
  animation-timing-function: linear;
}

.circle4 {
  animation-duration: 0.625s;
  animation-fill-mode: forwards;
  animation-name: fall4;
  animation-timing-function: linear;
}

.circle5 {
  animation-duration: 0.75s;
  animation-fill-mode: forwards;
  animation-name: fall5;
  animation-timing-function: linear;
}

@keyframes fall0 {
  from {
    transform: translate3d(0, -38px, 0);
  }
}

@keyframes fall1 {
  from {
    transform: translate3d(0, -76px, 0);
  }
}

@keyframes fall2 {
  from {
    transform: translate3d(0, -114px, 0);
  }
}

@keyframes fall3 {
  from {
    transform: translate3d(0, -152px, 0);
  }
}

@keyframes fall4 {
  from {
    transform: translate3d(0, -190px, 0);
  }
}

@keyframes fall5 {
  from {
    transform: translate3d(0, -228px, 0);
  }
}

.gameComplete > g {
  animation-duration: 0.5s;
  animation-fill-mode: forwards;
  animation-name: decreaseOpacity1;
  animation-timing-function: linear;
}

.gameComplete > .resultText {
  animation-duration: 0.5s;
  animation-fill-mode: forwards;
  animation-name: fadeIn;
  animation-timing-function: linear;
}

.gameReset > g {
  animation-duration: 0.5s;
  animation-fill-mode: forwards;
  animation-name: decreaseOpacity2;
  animation-timing-function: linear;
}

.gameReset > .board {
  animation-duration: 0.5s;
  animation-fill-mode: forwards;
  animation-name: increaseOpacity1;
  animation-timing-function: linear;
}

.gameReset > .resultText {
  animation-duration: 1s;
  animation-fill-mode: forwards;
  animation-name: fadeOut;
  animation-timing-function: linear;
}

@keyframes increaseOpacity1 {
  from {
    opacity: 0.5;
  }
}

@keyframes increaseOpacity2 {
  from {
    opacity: 0;
  }
  to {
    opacity: 0.5;
  }
}

@keyframes decreaseOpacity1 {
  to {
    opacity: 0.5;
  }
}

@keyframes decreaseOpacity2 {
  from {
    opacity: 0.5;
  }
  to {
    opacity: 0;
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
}

@keyframes fadeOut {
  to {
    opacity: 0;
  }
}

.gameContainer {
  display: flex;
  margin: 20px 20px 24px;
}

.gameContainerChild {
  background: #fff;
  border: 4px solid #224;
  border-radius: 4px;
  box-shadow: #ddd 8px 8px 0 -4px, #224 8px 8px;
  margin: 0 28px 8px 0;
  max-height: 467px;
}

.gameTree {
  background: #fff;
  border: 4px solid #224;
  border-radius: 4px;
  box-shadow: #ddd 8px 8px 0 -4px, #224 8px 8px;
  cursor: grab;
  flex-basis: 100%;
  margin: 0 8px 8px 0;
  max-height: 467px;
}

.gameTree:focus {
  cursor: grabbing;
}

.offlineText,
.requestStatusIndicator.fadeIn,
.evaluatedNodesIndicator.fadeIn {
  animation-fill-mode: forwards;
  animation-name: fadeIn;
  animation-timing-function: cubic-bezier(0, 0.7, 1, 1);
}

.requestStatusIndicator.fadeIn {
  animation-duration: 0.3125s;
}

.evaluatedNodesIndicator.fadeIn {
  animation-duration: 0.2s;
}

.requestStatusIndicator.fadeOut,
.evaluatedNodesIndicator.fadeOut {
  animation-fill-mode: forwards;
  animation-name: fadeOut;
  animation-timing-function: cubic-bezier(0.7, 0, 1, 1);
}

.requestStatusIndicator.fadeOut {
  animation-duration: 0.3125s;
}

.evaluatedNodesIndicator.fadeOut {
  animation-duration: 0.2s;
}

.requestStatusIndicator.offline,
.evaluatedNodesIndicator.offline {
  opacity: 0;
}

.waitingIndicator.fadeOut {
  opacity: 0;
  transition: all 0.2s;
}

.waitingIndicator.fadeIn {
  opacity: 1;
  transition: all 0.2s;
}

#indicatorElement1 {
  animation: changeOpacity 1s infinite;
}

#indicatorElement2 {
  animation: changeOpacity 1s infinite;
  animation-delay: 0.2s;
}

#indicatorElement3 {
  animation: changeOpacity 1s infinite;
  animation-delay: 0.4s;
}

#indicatorElement4 {
  animation: changeOpacity 1s infinite;
  animation-delay: 0.6s;
}

.offline > #indicatorElement1,
.offline > #indicatorElement2,
.offline > #indicatorElement3,
.offline > #indicatorElement4 {
  animation: none;
  opacity: 0;
}

@keyframes changeOpacity {
  0% {
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

.n,
.s {
  border-radius: 1px;
  outline-offset: 0px;
  outline-style: solid;
  padding: 0px 1px;
}

.n {
  outline-color: #f77;
  outline-width: 3px;
}

.s {
  outline-color: #77f;
  outline-width: 0px;
  transition: 0.15s ease-in-out;
}

span.highlight {
  outline-width: 3px;
}

div.highlight {
  background-color: #ddf;
  border-radius: 4px;
  transition: 0.3s ease-in-out;
}

#vertices > g {
  transition: fill 0.3s ease-in-out, stroke 0.3s ease-in-out;
}
